name: Build and Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Turbo
        run: npm install -g turbo

      - name: Prune for web
        run: npx turbo prune web --docker

      - name: Prune for api
        run: npx turbo prune api --docker

      - name: Create .env file
        run: |
          echo "NEXT_PUBLIC_NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "NEXT_PUBLIC_JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "NEXT_PUBLIC_JWT_ACCESS_EXPIRES=${{ secrets.JWT_ACCESS_EXPIRES }}" >> .env
          echo "NEXT_PUBLIC_JWT_REFRESH_EXPIRES=${{ secrets.JWT_REFRESH_EXPIRES }}" >> .env
          echo "NEXT_PUBLIC_NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}" >> .env
          echo "NEXT_PUBLIC_NAVER_SECRET=${{ secrets.NAVER_SECRET }}" >> .env

      - name: Build Docker images
        run: |
          docker build -f apps/web/Dockerfile -t humming-vision-web .
          docker build -f apps/api/Dockerfile -t humming-vision-api .

      - name: Save images to tar
        run: |
          docker save humming-vision-web > web.tar
          docker save humming-vision-api > api.tar

      - name: Copy Docker images and Compose file to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "web.tar,api.tar,docker-compose.yaml"
          target: "/home/ec2-user"

      - name: Remote Deploy (load + restart with docker compose)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker load < web.tar
            docker load < api.tar
            docker compose down
            docker compose up -d
